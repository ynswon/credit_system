<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.funda.mybatis.dao.schedule_creditorMapper" >
  <resultMap id="BaseResultMap" type="com.funda.mybatis.model.schedule_creditor" >
    <id column="idx" property="idx" jdbcType="INTEGER" />
    <result column="user_idx" property="userIdx" jdbcType="INTEGER" />
    <result column="funding_idx" property="fundingIdx" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="INTEGER" />
    <result column="principal_before_tax" property="principalBeforeTax" jdbcType="INTEGER" />
    <result column="interest_before_tax" property="interestBeforeTax" jdbcType="INTEGER" />
    <result column="overdue_interest_before" property="overdueInterestBefore" jdbcType="INTEGER" />
    <result column="tax" property="tax" jdbcType="INTEGER" />
    <result column="tax_national" property="taxNational" jdbcType="INTEGER" />
    <result column="tax_local" property="taxLocal" jdbcType="INTEGER" />
    <result column="payback_present_idx" property="paybackPresentIdx" jdbcType="INTEGER" />
    <result column="payback_total_times" property="paybackTotalTimes" jdbcType="INTEGER" />
    <result column="due_date" property="dueDate" jdbcType="DATE" />
    <result column="repayment_status" property="repaymentStatus" jdbcType="CHAR" />
    <result column="transfer_status" property="transferStatus" jdbcType="INTEGER" />
    <result column="transfer_count" property="transferCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    idx, user_idx, funding_idx, total_amount, principal_before_tax, interest_before_tax, 
    overdue_interest_before, tax, tax_national, tax_local, payback_present_idx, payback_total_times, 
    due_date, repayment_status, transfer_status, transfer_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.funda.mybatis.model.schedule_creditorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from schedule_creditor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule_creditor
    where idx = #{idx,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule_creditor
    where idx = #{idx,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.funda.mybatis.model.schedule_creditorExample" >
    delete from schedule_creditor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.funda.mybatis.model.schedule_creditor" >
    insert into schedule_creditor (idx, user_idx, funding_idx, 
      total_amount, principal_before_tax, interest_before_tax, 
      overdue_interest_before, tax, tax_national, 
      tax_local, payback_present_idx, payback_total_times, 
      due_date, repayment_status, transfer_status, 
      transfer_count)
    values (#{idx,jdbcType=INTEGER}, #{userIdx,jdbcType=INTEGER}, #{fundingIdx,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=INTEGER}, #{principalBeforeTax,jdbcType=INTEGER}, #{interestBeforeTax,jdbcType=INTEGER}, 
      #{overdueInterestBefore,jdbcType=INTEGER}, #{tax,jdbcType=INTEGER}, #{taxNational,jdbcType=INTEGER}, 
      #{taxLocal,jdbcType=INTEGER}, #{paybackPresentIdx,jdbcType=INTEGER}, #{paybackTotalTimes,jdbcType=INTEGER}, 
      #{dueDate,jdbcType=DATE}, #{repaymentStatus,jdbcType=CHAR}, #{transferStatus,jdbcType=INTEGER}, 
      #{transferCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.funda.mybatis.model.schedule_creditor" >
    insert into schedule_creditor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idx != null" >
        idx,
      </if>
      <if test="userIdx != null" >
        user_idx,
      </if>
      <if test="fundingIdx != null" >
        funding_idx,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="principalBeforeTax != null" >
        principal_before_tax,
      </if>
      <if test="interestBeforeTax != null" >
        interest_before_tax,
      </if>
      <if test="overdueInterestBefore != null" >
        overdue_interest_before,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="taxNational != null" >
        tax_national,
      </if>
      <if test="taxLocal != null" >
        tax_local,
      </if>
      <if test="paybackPresentIdx != null" >
        payback_present_idx,
      </if>
      <if test="paybackTotalTimes != null" >
        payback_total_times,
      </if>
      <if test="dueDate != null" >
        due_date,
      </if>
      <if test="repaymentStatus != null" >
        repayment_status,
      </if>
      <if test="transferStatus != null" >
        transfer_status,
      </if>
      <if test="transferCount != null" >
        transfer_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idx != null" >
        #{idx,jdbcType=INTEGER},
      </if>
      <if test="userIdx != null" >
        #{userIdx,jdbcType=INTEGER},
      </if>
      <if test="fundingIdx != null" >
        #{fundingIdx,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="principalBeforeTax != null" >
        #{principalBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="interestBeforeTax != null" >
        #{interestBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="overdueInterestBefore != null" >
        #{overdueInterestBefore,jdbcType=INTEGER},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=INTEGER},
      </if>
      <if test="taxNational != null" >
        #{taxNational,jdbcType=INTEGER},
      </if>
      <if test="taxLocal != null" >
        #{taxLocal,jdbcType=INTEGER},
      </if>
      <if test="paybackPresentIdx != null" >
        #{paybackPresentIdx,jdbcType=INTEGER},
      </if>
      <if test="paybackTotalTimes != null" >
        #{paybackTotalTimes,jdbcType=INTEGER},
      </if>
      <if test="dueDate != null" >
        #{dueDate,jdbcType=DATE},
      </if>
      <if test="repaymentStatus != null" >
        #{repaymentStatus,jdbcType=CHAR},
      </if>
      <if test="transferStatus != null" >
        #{transferStatus,jdbcType=INTEGER},
      </if>
      <if test="transferCount != null" >
        #{transferCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.funda.mybatis.model.schedule_creditorExample" resultType="java.lang.Integer" >
    select count(*) from schedule_creditor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule_creditor
    <set >
      <if test="record.idx != null" >
        idx = #{record.idx,jdbcType=INTEGER},
      </if>
      <if test="record.userIdx != null" >
        user_idx = #{record.userIdx,jdbcType=INTEGER},
      </if>
      <if test="record.fundingIdx != null" >
        funding_idx = #{record.fundingIdx,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
      </if>
      <if test="record.principalBeforeTax != null" >
        principal_before_tax = #{record.principalBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="record.interestBeforeTax != null" >
        interest_before_tax = #{record.interestBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="record.overdueInterestBefore != null" >
        overdue_interest_before = #{record.overdueInterestBefore,jdbcType=INTEGER},
      </if>
      <if test="record.tax != null" >
        tax = #{record.tax,jdbcType=INTEGER},
      </if>
      <if test="record.taxNational != null" >
        tax_national = #{record.taxNational,jdbcType=INTEGER},
      </if>
      <if test="record.taxLocal != null" >
        tax_local = #{record.taxLocal,jdbcType=INTEGER},
      </if>
      <if test="record.paybackPresentIdx != null" >
        payback_present_idx = #{record.paybackPresentIdx,jdbcType=INTEGER},
      </if>
      <if test="record.paybackTotalTimes != null" >
        payback_total_times = #{record.paybackTotalTimes,jdbcType=INTEGER},
      </if>
      <if test="record.dueDate != null" >
        due_date = #{record.dueDate,jdbcType=DATE},
      </if>
      <if test="record.repaymentStatus != null" >
        repayment_status = #{record.repaymentStatus,jdbcType=CHAR},
      </if>
      <if test="record.transferStatus != null" >
        transfer_status = #{record.transferStatus,jdbcType=INTEGER},
      </if>
      <if test="record.transferCount != null" >
        transfer_count = #{record.transferCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule_creditor
    set idx = #{record.idx,jdbcType=INTEGER},
      user_idx = #{record.userIdx,jdbcType=INTEGER},
      funding_idx = #{record.fundingIdx,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=INTEGER},
      principal_before_tax = #{record.principalBeforeTax,jdbcType=INTEGER},
      interest_before_tax = #{record.interestBeforeTax,jdbcType=INTEGER},
      overdue_interest_before = #{record.overdueInterestBefore,jdbcType=INTEGER},
      tax = #{record.tax,jdbcType=INTEGER},
      tax_national = #{record.taxNational,jdbcType=INTEGER},
      tax_local = #{record.taxLocal,jdbcType=INTEGER},
      payback_present_idx = #{record.paybackPresentIdx,jdbcType=INTEGER},
      payback_total_times = #{record.paybackTotalTimes,jdbcType=INTEGER},
      due_date = #{record.dueDate,jdbcType=DATE},
      repayment_status = #{record.repaymentStatus,jdbcType=CHAR},
      transfer_status = #{record.transferStatus,jdbcType=INTEGER},
      transfer_count = #{record.transferCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.funda.mybatis.model.schedule_creditor" >
    update schedule_creditor
    <set >
      <if test="userIdx != null" >
        user_idx = #{userIdx,jdbcType=INTEGER},
      </if>
      <if test="fundingIdx != null" >
        funding_idx = #{fundingIdx,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="principalBeforeTax != null" >
        principal_before_tax = #{principalBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="interestBeforeTax != null" >
        interest_before_tax = #{interestBeforeTax,jdbcType=INTEGER},
      </if>
      <if test="overdueInterestBefore != null" >
        overdue_interest_before = #{overdueInterestBefore,jdbcType=INTEGER},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=INTEGER},
      </if>
      <if test="taxNational != null" >
        tax_national = #{taxNational,jdbcType=INTEGER},
      </if>
      <if test="taxLocal != null" >
        tax_local = #{taxLocal,jdbcType=INTEGER},
      </if>
      <if test="paybackPresentIdx != null" >
        payback_present_idx = #{paybackPresentIdx,jdbcType=INTEGER},
      </if>
      <if test="paybackTotalTimes != null" >
        payback_total_times = #{paybackTotalTimes,jdbcType=INTEGER},
      </if>
      <if test="dueDate != null" >
        due_date = #{dueDate,jdbcType=DATE},
      </if>
      <if test="repaymentStatus != null" >
        repayment_status = #{repaymentStatus,jdbcType=CHAR},
      </if>
      <if test="transferStatus != null" >
        transfer_status = #{transferStatus,jdbcType=INTEGER},
      </if>
      <if test="transferCount != null" >
        transfer_count = #{transferCount,jdbcType=INTEGER},
      </if>
    </set>
    where idx = #{idx,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.funda.mybatis.model.schedule_creditor" >
    update schedule_creditor
    set user_idx = #{userIdx,jdbcType=INTEGER},
      funding_idx = #{fundingIdx,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      principal_before_tax = #{principalBeforeTax,jdbcType=INTEGER},
      interest_before_tax = #{interestBeforeTax,jdbcType=INTEGER},
      overdue_interest_before = #{overdueInterestBefore,jdbcType=INTEGER},
      tax = #{tax,jdbcType=INTEGER},
      tax_national = #{taxNational,jdbcType=INTEGER},
      tax_local = #{taxLocal,jdbcType=INTEGER},
      payback_present_idx = #{paybackPresentIdx,jdbcType=INTEGER},
      payback_total_times = #{paybackTotalTimes,jdbcType=INTEGER},
      due_date = #{dueDate,jdbcType=DATE},
      repayment_status = #{repaymentStatus,jdbcType=CHAR},
      transfer_status = #{transferStatus,jdbcType=INTEGER},
      transfer_count = #{transferCount,jdbcType=INTEGER}
    where idx = #{idx,jdbcType=INTEGER}
  </update>
</mapper>